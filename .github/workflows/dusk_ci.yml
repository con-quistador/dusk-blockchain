on: [pull_request]
name: Continuous Integration
jobs:
  go-analyzer:
    runs-on: ubuntu-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.x
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Run go-analyzer
      run: make go-analyzer
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.x
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Lint
      run: rm -rf $HOME/.cache/golangci-lint || true && make lint
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.x
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Test
      run: go get ./... && go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...
    - name: Upload coverage report
      run: bash <(curl -s https://codecov.io/bash)
  # test-harness:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Install Go
  #     uses: actions/setup-go@v2
  #     with:
  #       go-version: 1.17.x
  #   - name: Checkout code
  #     uses: actions/checkout@v2
  #   - name: Test Harness
  #     run: make test-harness-ci
  # test-harness-kadcast:
  #   runs-on: core
  #   steps:
  #   - name: Install Go
  #     uses: actions/setup-go@v2
  #     with:
  #       go-version: 1.17.x
  #   - name: Checkout code
  #     uses: actions/checkout@v2
  #   - uses: actions-rs/toolchain@v1
  #     with:
  #       profile: minimal
  #       toolchain: nightly-2021-10-28
  #   - run: rustup component add rustfmt
  #   - run: rustup target add wasm32-unknown-unknown
  #   - name: Cache Cargo home
  #     uses: actions/cache@v2
  #     env:
  #       cache-name: cache-cargo-home
  #     with:
        # See https://doc.rust-lang.org/cargo/guide/cargo-home.html#caching-the-cargo-home-in-ci
    #     path: |
    #       ~/.cargo/registry/index
    #       ~/.cargo/registry/cache
    #       ~/.cargo/git/db
    #     key: ${{env.cache-name}}-${{ runner.os }}-${{ hashFiles('Cargo.lock') }}
    # - name: Test Harness with Kadcast 
    #   run: > 
    #     RUSK_PROFILE_PATH="/var/opt/build-cache"
    #     RUSK_KEEP_KEYS="1"
    #     RUSK_OVERWRITE_STATE="1"
    #     make test-harness-ci-kadcast
